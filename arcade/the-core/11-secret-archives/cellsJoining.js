const assert = require('assert')

// Attempt #2, simply redraw and check for borders, etc
function cellsJoining (table, coords) {
  const mergingRows = [coords[0][0], coords[1][0]].sort()
  const mergingCols = [coords[0][1], coords[1][1]].sort()

  let curRow = -1
  let curCol = -1
  let isTopBorder = false
  let isBottomBorder = false
  let isFirstColChar = false
  let inMergingColRange = false

  const joined = table.map((row, i) => {
    if (row[0] === '+') curRow++

    isTopBorder = i === 0
    isBottomBorder = i === table.length - 1

    // If we're above the merging rows, return row
    if (curRow < mergingRows[0]) return row

    // If we're below the merging rows, return row
    if (curRow > mergingRows[1]) {
      // Unless this is the bottom row and affected by merging
      if (!(curRow - 1 === mergingRows[1] && isBottomBorder)) {
        return row
      }
    }

    // The top merging border doesn't need changes, unless it's literally
    // the top of the table
    if ((curRow === mergingRows[0]) && row[0] === '+' && !isTopBorder) return row

    // AT THIS POINT WE'RE IN THE RANGE OF AFFECTED ROWS

    // Reset col counter
    curCol = -1

    return row.split('').reduce((acc, val, c) => {
      isFirstColChar = false

      if (val === '+' || val === '|') {
        curCol++
        isFirstColChar = curCol === mergingCols[0]
      }

      /*
        Border rules:
          - i.e. is this literally the top or bottom border of the table
            - (i === 0 || i === table.length - 1)
          - ✅ First char is +
          - ✅ If we're in the range of affected cols, change + to -
          - Last char is +

        Column rules (at this point we're sure we're not bottom border):
          - First char is | if inMergingColRange, else val
          - ✅ Last char is either | or +
            - Simply append val when (curCol - 1 === mergingCols[1])
          - If inMergingColRange, replace -, |, and + with ' '
            - Unless it's literally the first char since coming into merge range
          - Append val
       */

      inMergingColRange = (curCol >= mergingCols[0] && curCol <= mergingCols[1])

      if (isBottomBorder || isTopBorder) {
        if (c === 0) return acc + '+'
        if (val === '+' && inMergingColRange && !isFirstColChar) return acc + '-'

        return acc + val
      }

      // Handle first char
      if (c === 0) return acc + (inMergingColRange ? '|' : val)

      if (inMergingColRange && !isFirstColChar && ['|', '-', '+'].includes(val)) {
        return acc + ' '
      }

      // Handle last char
      if (c === row.length - 1) return acc + (acc[c - 1] === '-' ? '+' : '|')

      return acc + val
    }, '')
  })

  return joined
}

const makeTest = (t, c, x) => ({ t, c, x })
const tests = [
  makeTest(
    [ '+----+--+-----+----+',
      '|abcd|56|!@#$%|qwer|',
      '|1234|78|^&=()|tyui|',
      '+----+--+-----+----+',
      '|zxcv|90|77777|stop|',
      '+----+--+-----+----+',
      '|asdf|~~|ghjkl|100$|',
      '+----+--+-----+----+'],
    [[2, 0], [1, 1]],
    [ '+----+--+-----+----+',
      '|abcd|56|!@#$%|qwer|',
      '|1234|78|^&=()|tyui|',
      '+----+--+-----+----+',
      '|zxcv 90|77777|stop|',
      '|       +-----+----+',
      '|asdf ~~|ghjkl|100$|',
      '+-------+-----+----+']),

  // // Test rows under mergingRows
  makeTest(
    ['+----+--+-----+----+',
      '|abcd|56|!@#$%|qwer|',
      '|1234|78|^&=()|tyui|',
      '+----+--+-----+----+',
      '|zxcv|90|77777|stop|',
      '+----+--+-----+----+',
      '|asdf|~~|ghjkl|100$|',
      '+----+--+-----+----+',
      '|nate|~~|natel|nate|',
      '+----+--+-----+----+'],
    [[2, 0], [1, 1]],
    ['+----+--+-----+----+',
      '|abcd|56|!@#$%|qwer|',
      '|1234|78|^&=()|tyui|',
      '+----+--+-----+----+',
      '|zxcv 90|77777|stop|',
      '|       +-----+----+',
      '|asdf ~~|ghjkl|100$|',
      '+----+--+-----+----+',
      '|nate|~~|natel|nate|',
      '+----+--+-----+----+']),

  makeTest(
    ['+-----+-----+--------+-----------+--------+',
      '|fwdaw|dddd |42      |pretty long|table   |',
      '+-----+-----+--------+-----------+--------+',
      '|is   |long |ffffffff|ff         |border  |',
      '+-----+-----+--------+-----------+--------+',
      '|     |     |        |           |        |',
      '|     |     |        |           |        |',
      '+-----+-----+--------+-----------+--------+',
      '|empty|cells|are     |best       |there is|',
      '+-----+-----+--------+-----------+--------+'],
    [[3, 0], [3, 4]],
    ['+-----+-----+--------+-----------+--------+',
      '|fwdaw|dddd |42      |pretty long|table   |',
      '+-----+-----+--------+-----------+--------+',
      '|is   |long |ffffffff|ff         |border  |',
      '+-----+-----+--------+-----------+--------+',
      '|     |     |        |           |        |',
      '|     |     |        |           |        |',
      '+-----+-----+--------+-----------+--------+',
      '|empty cells are      best        there is|',
      '+-----------------------------------------+']),

  makeTest(
    ['+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|1|1|  |  |  |3|     |4|   |    |5|ggg                                        |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |11|23|44| |55555| |abc|defg| |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |#$%#                                       |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!|',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|*|*|42|  |  | |     |0|=) |    | |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+'],
    [[4, 0], [0, 11]],
    ['+-----------------------------------------------------------------------------+',
      '|1 1          3       4          5 ggg                                        |',
      '|                                                                             |',
      '|    11 23 44   55555   abc defg                                              |',
      '|                                                                             |',
      '|                                  #$%#                                       |',
      '|                                                                             |',
      '|                                  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!|',
      '|                                                                             |',
      '|* * 42               0 =)                                                    |',
      '+-----------------------------------------------------------------------------+']),

  makeTest(
    [ '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|1|1|  |  |  |3|     |4|   |    |5|ggg                                        |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |11|23|44| |55555| |abc|defg| |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |#$%#                                       |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!|',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|*|*|42|  |  | |     |0|=) |    | |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |#$%#                                       |',
      '| | |  |  |  | |  *  | |   | dd | |#$%#                                       |',
      '| | |  |  |  | |     | |   |    | |#$%#                                       |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|1|1|  |  |  |3|     |4|   |    |5|ggg                                        |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |11|23|44| |55555| |abc|defg| |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |#$%#                                       |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!|',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|*|*|42|  |  | |     |0|=) |    | |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+'],
    [[5, 6], [4, 9]],
    [ '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|1|1|  |  |  |3|     |4|   |    |5|ggg                                        |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |11|23|44| |55555| |abc|defg| |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |#$%#                                       |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!|',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|*|*|42|  |  | |      0 =)      | |                                           |',
      '+-+-+--+--+--+-+                +-+-------------------------------------------+',
      '| | |  |  |  | |                | |#$%#                                       |',
      '| | |  |  |  | |  *          dd | |#$%#                                       |',
      '| | |  |  |  | |                | |#$%#                                       |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|1|1|  |  |  |3|     |4|   |    |5|ggg                                        |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |11|23|44| |55555| |abc|defg| |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |#$%#                                       |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '| | |  |  |  | |     | |   |    | |!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!|',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|*|*|42|  |  | |     |0|=) |    | |                                           |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+']),

  makeTest(
    ['+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+',
      '|1|1|  |  |  |3|     |4|   |    |5|ggg                                        |',
      '+-+-+--+--+--+-+-----+-+---+----+-+-------------------------------------------+'],
    [[0, 1], [0, 10]],
    [ '+-+-------------------------------+-------------------------------------------+',
      '|1|1          3       4          5|ggg                                        |',
      '+-+-------------------------------+-------------------------------------------+']
  )
]

tests.forEach(t => assert.deepStrictEqual(cellsJoining(t.t, t.c), t.x))
